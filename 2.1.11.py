–§—É–Ω–∫—Ü–∏—è choose_plural() üå∂Ô∏èüå∂Ô∏è
–†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é choose_plural(), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–≤–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º –ø–æ—Ä—è–¥–∫–µ:

amount ‚Äî –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
declensions ‚Äî –∫–æ—Ä—Ç–µ–∂ –∏–∑ —Ç—Ä–µ—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —Å–∫–ª–æ–Ω–µ–Ω–∏—è —Å—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–≥–æ
–§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Å—Ç—Ä–æ–∫—É, –ø–æ–ª—É—á–µ–Ω–Ω—É—é –ø—É—Ç–µ–º –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ —Å—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∏–∑ –∫–æ—Ä—Ç–µ–∂–∞ declensions –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ amount, –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ:

<–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ> <—Å—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–µ>
–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –ü–µ—Ä–µ–¥–∞–≤–∞–µ–º—ã–π –≤ —Ñ—É–Ω–∫—Ü–∏—é –∫–æ—Ä—Ç–µ–∂ –ª–µ–≥–∫–æ —Å–æ—Å—Ç–∞–≤–∏—Ç—å –ø–æ –º–Ω–µ–º–æ–Ω–∏—á–µ—Å–∫–æ–º—É –ø—Ä–∞–≤–∏–ª—É: –æ–¥–∏–Ω, –¥–≤–∞, –ø—è—Ç—å. –ù–∞–ø—Ä–∏–º–µ—Ä:

–¥–ª—è —Å–ª–æ–≤–∞ ¬´–∞—Ä–±—É–∑¬ª: –∞—Ä–±—É–∑, –∞—Ä–±—É–∑–∞, –∞—Ä–±—É–∑–æ–≤
–¥–ª—è —Å–ª–æ–≤–∞ ¬´—Ä—É–±–ª—å¬ª: —Ä—É–±–ª—å, —Ä—É–±–ª—è, —Ä—É–±–ª–µ–π
–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –í —Ç–µ—Å—Ç–∏—Ä—É—é—â—É—é —Å–∏—Å—Ç–µ–º—É —Å–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, —Å–æ–¥–µ—Ä–∂–∞—â—É—é —Ç–æ–ª—å–∫–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é —Ñ—É–Ω–∫—Ü–∏—é choose_plural(), –Ω–æ –Ω–µ –∫–æ–¥, –≤—ã–∑—ã–≤–∞—é—â–∏–π –µ–µ.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 3. –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ —Å—Å—ã–ª–∫–∞–º:


def choose_plural(amount : int,declensions ):
        end_amount = int(str(amount)[-1])
        if (amount>10 and int(str(amount)[-2: ])!=11)  and end_amount==1:
            return f'{amount} {declensions[0]}'
        elif amount%10 in (2,3,4) and not (amount%100 in (12,13,14)):
            return f'{amount} {declensions[1]}'
        return f'{amount} {declensions[2]}'


print(choose_plural(21, ('–ø—Ä–∏–º–µ—Ä', '–ø—Ä–∏–º–µ—Ä–∞', '–ø—Ä–∏–º–µ—Ä–æ–≤')))


'''
assert (choose_plural(21, ('–ø—Ä–∏–º–µ—Ä', '–ø—Ä–∏–º–µ—Ä–∞', '–ø—Ä–∏–º–µ—Ä–æ–≤'))) == '21 –ø—Ä–∏–º–µ—Ä'
assert (choose_plural(92, ('–≥–≤–æ–∑–¥—å', '–≥–≤–æ–∑–¥—è', '–≥–≤–æ–∑–¥–µ–π'))) == '92 –≥–≤–æ–∑–¥—è'
assert (choose_plural(8, ('—è–±–ª–æ–∫–æ', '—è–±–ª–æ–∫–∞', '—è–±–ª–æ–∫'))) == '8 —è–±–ª–æ–∫'
assert (choose_plural(111223, ('–∫–æ–ø–µ–π–∫–∞', '–∫–æ–ø–µ–π–∫–∏', '–∫–æ–ø–µ–µ–∫'))) == '111 223 –∫–æ–ø–µ–π–∫–∏'
assert (choose_plural(763434, ('—Ä—É–±–ª—å', '—Ä—É–±–ª—è', '—Ä—É–±–ª–µ–π'))) == '763434 —Ä—É–±–ª—è'
assert (choose_plural(512312, ('—Ü–µ–Ω—Ç', '—Ü–µ–Ω—Ç–∞', '—Ü–µ–Ω—Ç–æ–≤'))) == '512312 —Ü–µ–Ω—Ç–æ–≤'
assert (choose_plural(59, ('–ø–æ–º–∏–¥–æ—Ä', '–ø–æ–º–∏–¥–æ—Ä–∞', '–ø–æ–º–∏–¥–æ—Ä–æ–≤'))) == '59 –ø–æ–º–∏–¥–æ—Ä–æ–≤'
assert (choose_plural(23424157, ('–æ–≥—É—Ä–µ—Ü', '–æ–≥—É—Ä—Ü–∞', '–æ–≥—É—Ä—Ü–æ–≤'))) == '23424157 –æ–≥—É—Ä—Ü–æ–≤'
assert (choose_plural(240, ('–∫—É—Ä–∏—Ü–∞', '–∫—É—Ä–∏—Ü—ã', '–∫—É—Ä–∏—Ü'))) == '240 –∫—É—Ä–∏—Ü'
assert (choose_plural(49324, ('–ø–ª—é–º–±—É—Å', '–ø–ª—é–º–±—É—Å–∞', '–ø–ª—é–º–±—É—Å–æ–≤'))) == '49324 –ø–ª—é–º–±—É—Å–∞'
assert (choose_plural(505, ('—É—Ç–∫–∞', '—É—Ç–∫–∏', '—É—Ç–æ–∫'))) == '505 —É—Ç–æ–∫'
assert (choose_plural(666, ('—à–∫–∞—Ñ', '—à–∫–∞—Ñ–∞', '—à–∫–∞—Ñ–æ–≤'))) == '666 —à–∫–∞—Ñ–æ–≤'
assert (choose_plural(11, ('—Å—Ç—É–ª', '—Å—Ç—É–ª–∞', '—Å—Ç—É–ª—å–µ–≤'))) == '11 —Å—Ç—É–ª—å–µ–≤'
assert (choose_plural(3458438435812, ('–¥–æ–ª–ª–∞—Ä', '–¥–æ–ª–ª–∞—Ä–∞', '–¥–æ–ª–ª–∞—Ä–æ–≤'))) == '3458438435812 –¥–æ–ª–ª–∞—Ä–æ–≤'
assert (choose_plural(2, ('–ø—Ä–∏–º–µ—Ä', '–ø—Ä–∏–º–µ—Ä–∞', '–ø—Ä–∏–º–µ—Ä–æ–≤'))) == '2 –ø—Ä–∏–º–µ—Ä–∞'
assert (choose_plural(111, ('–ø—Ä–∏–º–µ—Ä', '–ø—Ä–∏–º–µ—Ä–∞', '–ø—Ä–∏–º–µ—Ä–æ–≤'))) == '111 –ø—Ä–∏–º–µ—Ä–æ–≤'
assert (choose_plural(1223123111, ('–ø—Ä–∏–º–µ—Ä', '–ø—Ä–∏–º–µ—Ä–∞', '–ø—Ä–∏–º–µ—Ä–æ–≤'))) == '1223123111 –ø—Ä–∏–º–µ—Ä–æ–≤'
'''