# –§—É–Ω–∫—Ü–∏—è is_available_date() üå∂Ô∏è
# –í–æ –≤—Ä–µ–º—è –≤–∏–∑–∏—Ç–∞ –æ—á–µ—Ä–µ–¥–Ω–æ–≥–æ –≥–æ—Å—Ç—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º –æ—Ç–µ–ª—è –ø—Ä–∏—Ö–æ–¥–∏—Ç—Å—è –ø—Ä–æ–≤–µ—Ä—è—Ç—å, –¥–æ—Å—Ç—É–ø–Ω–∞ –ª–∏ —Ç–∞ –∏–ª–∏ –∏–Ω–∞—è –¥–∞—Ç–∞ –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–æ–º–µ—Ä–∞.

# –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é is_available_date(), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–≤–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º –ø–æ—Ä—è–¥–∫–µ:

# booked_dates ‚Äî —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–æ–∫–æ–≤—ã—Ö –¥–∞—Ç, –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è. –≠–ª–µ–º–µ–Ω—Ç–æ–º —Å–ø–∏—Å–∫–∞ —è–≤–ª—è–µ—Ç—Å—è –ª–∏–±–æ –æ–¥–∏–Ω–æ—á–Ω–∞—è –¥–∞—Ç–∞, –ª–∏–±–æ –ø–µ—Ä–∏–æ–¥ (–¥–≤–µ –¥–∞—Ç—ã —á–µ—Ä–µ–∑ –¥–µ—Ñ–∏—Å). –ù–∞–ø—Ä–∏–º–µ—Ä:
# ['04.11.2021', '05.11.2021-09.11.2021']
# date_for_booking ‚Äî –æ–¥–∏–Ω–æ—á–Ω–∞—è —Å—Ç—Ä–æ–∫–æ–≤–∞—è –¥–∞—Ç–∞ –∏–ª–∏ –ø–µ—Ä–∏–æ–¥ (–¥–≤–µ –¥–∞—Ç—ã —á–µ—Ä–µ–∑ –¥–µ—Ñ–∏—Å), –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –≥–æ—Å—Ç—å –∂–µ–ª–∞–µ—Ç –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–º–µ—Ä. –ù–∞–ø—Ä–∏–º–µ—Ä:
# '01.11.2021' –∏–ª–∏ '01.11.2021-04.11.2021'
# –§—É–Ω–∫—Ü–∏—è is_available_date() –¥–æ–ª–∂–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å True, –µ—Å–ª–∏ –¥–∞—Ç–∞ –∏–ª–∏ –ø–µ—Ä–∏–æ–¥ date_for_booking –ø–æ–ª–Ω–æ—Å—Ç—å—é –¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è. –í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å False.

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç—Å—è, —á—Ç–æ –≤ –ø–µ—Ä–∏–æ–¥–µ –ª–µ–≤–∞—è –¥–∞—Ç–∞ –≤—Å–µ–≥–¥–∞ –º–µ–Ω—å—à–µ –ø—Ä–∞–≤–æ–π.

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –í –ø–µ—Ä–∏–æ–¥–µ (–¥–≤–µ –¥–∞—Ç—ã —á–µ—Ä–µ–∑ –¥–µ—Ñ–∏—Å) –≥—Ä–∞–Ω–∏—á–Ω—ã–µ –¥–∞—Ç—ã –≤–∫–ª—é—á–µ–Ω—ã.

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 3. –í —Ç–µ—Å—Ç–∏—Ä—É—é—â—É—é —Å–∏—Å—Ç–µ–º—É —Å–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, —Å–æ–¥–µ—Ä–∂–∞—â—É—é —Ç–æ–ª—å–∫–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é —Ñ—É–Ω–∫—Ü–∏—é is_available_date(), –Ω–æ –Ω–µ –∫–æ–¥, –≤—ã–∑—ã–≤–∞—é—â–∏–π –µ–µ.

from datetime import datetime

def is_available_date(booked_dates, date_for_booking):
    def string_to_date(string_date):
        return datetime.strptime(string_date, '%d.%m.%Y')

    # check if `date_for_booking` is a single date
    if '-' not in date_for_booking:
        date_for_booking = string_to_date(date_for_booking)
        for date_string in booked_dates:
            # check if `date_for_booking` is in range of booked dates
            if '-' in date_string:
                start, end = map(string_to_date, date_string.split('-'))
                if start <= date_for_booking <= end:
                    return False
            else:
                if string_to_date(date_string) == date_for_booking:
                    return False
        return True

    # `date_for_booking` is a period
    else:
        start, end = map(string_to_date, date_for_booking.split('-'))
        for date_string in booked_dates:
            # check if booked dates intersect with `date_for_booking`
            if '-' in date_string:
                booked_start, booked_end = map(string_to_date, date_string.split('-'))
                if start <= booked_end and end >= booked_start:
                    return False
            else:
                if start <= string_to_date(date_string) <= end:
                    return False
        return True

dates = ['01.11.2021', '05.11.2021-09.11.2021', '12.11.2021', '15.11.2021-21.11.2021']
some_date = '10.11.2021-14.11.2021'
print(is_available_date(dates, some_date))


#–õ–£–ß–®–ï–ï –†–ï–®–ï–ù–ò–ï
from datetime import datetime
def sd(s): # —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ –¥–∞—Ç—É
    return datetime.strptime(s, '%d.%m.%Y')
def dk(spd): # —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É c –¥–∞—Ç–æ–π –∏–ª–∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º –¥–∞—Ç –≤ –∫–æ—Ä—Ç–µ–∂ –∏–∑ 2 –¥–∞—Ç
    return (sd(spd[:10]), sd(spd[11:])) if '-' in spd else (sd(spd), sd(spd))
def is_available_date(sp, d):
    for x in sp: # –ø—Ä–æ–≤–µ—Ä—è–µ–º, –ø–µ—Ä–µ—Å–µ–∫–∞—é—Ç—Å—è –ª–∏ –∫–æ—Ä—Ç–µ–∂–∏ –¥–∞—Ç –≥–æ—Å—Ç—è –∏ –æ—Ç–µ–ª—è
        if not(dk(x)[1] < dk(d)[0] or dk(x)[0] > dk(d)[1]):
            return False # –µ—Å–ª–∏ –ø–µ—Ä–µ—Å–µ–∫–∞—é—Ç—Å—è, —Ç–æ –≤—ã–≤–æ–¥–∏–º False
    return True  # –∞ –µ—Å–ª–∏ –Ω–µ—Ç, —Ç–æ True